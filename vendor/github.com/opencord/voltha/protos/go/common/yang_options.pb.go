// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yang_options.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageParserOption int32

const (
	// Move any enclosing child enum/message definition to the same level
	// as the parent (this message) in the yang generated file
	MessageParserOption_MOVE_TO_PARENT_LEVEL MessageParserOption = 0
	// Create both a grouping and a container for this message.  The container
	// name will be the message name.  The grouping name will be the message
	// name prefixed with "grouping_"
	MessageParserOption_CREATE_BOTH_GROUPING_AND_CONTAINER MessageParserOption = 1
)

var MessageParserOption_name = map[int32]string{
	0: "MOVE_TO_PARENT_LEVEL",
	1: "CREATE_BOTH_GROUPING_AND_CONTAINER",
}

var MessageParserOption_value = map[string]int32{
	"MOVE_TO_PARENT_LEVEL":               0,
	"CREATE_BOTH_GROUPING_AND_CONTAINER": 1,
}

func (x MessageParserOption) String() string {
	return proto.EnumName(MessageParserOption_name, int32(x))
}

func (MessageParserOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_41047559c66f86d3, []int{0}
}

type InlineNode struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *InlineNode) Reset()         { *m = InlineNode{} }
func (m *InlineNode) String() string { return proto.CompactTextString(m) }
func (*InlineNode) ProtoMessage()    {}
func (*InlineNode) Descriptor() ([]byte, []int) {
	return fileDescriptor_41047559c66f86d3, []int{0}
}

func (m *InlineNode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InlineNode.Unmarshal(m, b)
}
func (m *InlineNode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InlineNode.Marshal(b, m, deterministic)
}
func (m *InlineNode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InlineNode.Merge(m, src)
}
func (m *InlineNode) XXX_Size() int {
	return xxx_messageInfo_InlineNode.Size(m)
}
func (m *InlineNode) XXX_DiscardUnknown() {
	xxx_messageInfo_InlineNode.DiscardUnknown(m)
}

var xxx_messageInfo_InlineNode proto.InternalMessageInfo

func (m *InlineNode) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *InlineNode) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

type RpcReturnDef struct {
	// The gRPC methods return message types.  NETCONF expects an actual
	// attribute as defined in the YANG schema.  The xnl_tag will be used
	// as the top most tag when translating a gRPC response into an xml
	// response
	XmlTag string `protobuf:"bytes,1,opt,name=xml_tag,json=xmlTag,proto3" json:"xml_tag,omitempty"`
	// When the gRPC response is a list of items, we need to differentiate
	// between a YANG schema attribute whose name is "items" and when "items"
	// is used only to indicate a list of items is being returned.  The default
	// behavior assumes a list is returned when "items" is present in
	// the response.  This option will therefore be used when the attribute
	// name in the YANG schema is 'items'
	ListItemsName        string   `protobuf:"bytes,2,opt,name=list_items_name,json=listItemsName,proto3" json:"list_items_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcReturnDef) Reset()         { *m = RpcReturnDef{} }
func (m *RpcReturnDef) String() string { return proto.CompactTextString(m) }
func (*RpcReturnDef) ProtoMessage()    {}
func (*RpcReturnDef) Descriptor() ([]byte, []int) {
	return fileDescriptor_41047559c66f86d3, []int{1}
}

func (m *RpcReturnDef) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcReturnDef.Unmarshal(m, b)
}
func (m *RpcReturnDef) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcReturnDef.Marshal(b, m, deterministic)
}
func (m *RpcReturnDef) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcReturnDef.Merge(m, src)
}
func (m *RpcReturnDef) XXX_Size() int {
	return xxx_messageInfo_RpcReturnDef.Size(m)
}
func (m *RpcReturnDef) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcReturnDef.DiscardUnknown(m)
}

var xxx_messageInfo_RpcReturnDef proto.InternalMessageInfo

func (m *RpcReturnDef) GetXmlTag() string {
	if m != nil {
		return m.XmlTag
	}
	return ""
}

func (m *RpcReturnDef) GetListItemsName() string {
	if m != nil {
		return m.ListItemsName
	}
	return ""
}

var E_YangChildRule = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*MessageParserOption)(nil),
	Field:         7761774,
	Name:          "voltha.yang_child_rule",
	Tag:           "varint,7761774,opt,name=yang_child_rule,enum=voltha.MessageParserOption",
	Filename:      "yang_options.proto",
}

var E_YangMessageRule = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*MessageParserOption)(nil),
	Field:         7761775,
	Name:          "voltha.yang_message_rule",
	Tag:           "varint,7761775,opt,name=yang_message_rule,enum=voltha.MessageParserOption",
	Filename:      "yang_options.proto",
}

var E_YangInlineNode = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.FieldOptions)(nil),
	ExtensionType: (*InlineNode)(nil),
	Field:         7761776,
	Name:          "voltha.yang_inline_node",
	Tag:           "bytes,7761776,opt,name=yang_inline_node",
	Filename:      "yang_options.proto",
}

var E_YangXmlTag = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MethodOptions)(nil),
	ExtensionType: (*RpcReturnDef)(nil),
	Field:         7761777,
	Name:          "voltha.yang_xml_tag",
	Tag:           "bytes,7761777,opt,name=yang_xml_tag",
	Filename:      "yang_options.proto",
}

func init() {
	proto.RegisterEnum("voltha.MessageParserOption", MessageParserOption_name, MessageParserOption_value)
	proto.RegisterType((*InlineNode)(nil), "voltha.InlineNode")
	proto.RegisterType((*RpcReturnDef)(nil), "voltha.RpcReturnDef")
	proto.RegisterExtension(E_YangChildRule)
	proto.RegisterExtension(E_YangMessageRule)
	proto.RegisterExtension(E_YangInlineNode)
	proto.RegisterExtension(E_YangXmlTag)
}

func init() { proto.RegisterFile("yang_options.proto", fileDescriptor_41047559c66f86d3) }

var fileDescriptor_41047559c66f86d3 = []byte{
	// 447 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0x4d, 0x6f, 0xd3, 0x30,
	0x18, 0xc7, 0x69, 0x41, 0x45, 0x98, 0xad, 0x2b, 0x66, 0x12, 0x15, 0x08, 0xa8, 0x7a, 0x98, 0x26,
	0x10, 0x09, 0x1a, 0xb7, 0xde, 0xba, 0x2e, 0x8c, 0x4a, 0x5b, 0x52, 0x59, 0x61, 0xbc, 0x1c, 0xb0,
	0xd2, 0xc4, 0x73, 0x2d, 0x6c, 0x3f, 0x51, 0xec, 0xa0, 0xed, 0xa3, 0x72, 0xe1, 0x23, 0xf0, 0xf2,
	0x0d, 0x50, 0xec, 0x86, 0x21, 0x6d, 0x87, 0xde, 0x92, 0x7f, 0xec, 0xdf, 0x2f, 0xcf, 0x0b, 0xc2,
	0x97, 0x99, 0xe6, 0x14, 0x4a, 0x2b, 0x40, 0x9b, 0xa0, 0xac, 0xc0, 0x02, 0xee, 0x7d, 0x03, 0x69,
	0x57, 0xd9, 0xe3, 0x11, 0x07, 0xe0, 0x92, 0x85, 0x2e, 0x5d, 0xd6, 0xe7, 0x61, 0xc1, 0x4c, 0x5e,
	0x89, 0xd2, 0x42, 0xe5, 0x4f, 0x8e, 0x5f, 0x23, 0x34, 0xd7, 0x52, 0x68, 0x16, 0x43, 0xc1, 0x70,
	0x1f, 0x75, 0x45, 0x31, 0xec, 0x8c, 0x3a, 0xfb, 0xf7, 0x48, 0x57, 0x14, 0x18, 0xa3, 0x3b, 0xf6,
	0xb2, 0x64, 0xc3, 0xae, 0x4b, 0xdc, 0xf3, 0x38, 0x41, 0x5b, 0xa4, 0xcc, 0x09, 0xb3, 0x75, 0xa5,
	0x8f, 0xd8, 0x39, 0x7e, 0x84, 0xee, 0x5e, 0x28, 0x49, 0x6d, 0xc6, 0xd7, 0x17, 0x7b, 0x17, 0x4a,
	0xa6, 0x19, 0xc7, 0x7b, 0x68, 0x47, 0x0a, 0x63, 0xa9, 0xb0, 0x4c, 0x19, 0xaa, 0x33, 0xd5, 0x72,
	0xb6, 0x9b, 0x78, 0xde, 0xa4, 0x71, 0xa6, 0xd8, 0x8b, 0x0f, 0xe8, 0xe1, 0x29, 0x33, 0x26, 0xe3,
	0x6c, 0x91, 0x55, 0x86, 0x55, 0x89, 0x2b, 0x05, 0x0f, 0xd1, 0xee, 0x69, 0x72, 0x16, 0xd1, 0x34,
	0xa1, 0x8b, 0x29, 0x89, 0xe2, 0x94, 0x9e, 0x44, 0x67, 0xd1, 0xc9, 0xe0, 0x16, 0xde, 0x43, 0xe3,
	0x19, 0x89, 0xa6, 0x69, 0x44, 0x0f, 0x93, 0xf4, 0x1d, 0x3d, 0x26, 0xc9, 0xfb, 0xc5, 0x3c, 0x3e,
	0xa6, 0xd3, 0xf8, 0x88, 0xce, 0x92, 0x38, 0x9d, 0xce, 0xe3, 0x88, 0x0c, 0x3a, 0x13, 0x8e, 0x76,
	0x5c, 0x6f, 0xf2, 0x95, 0x90, 0x05, 0xad, 0x6a, 0xc9, 0xf0, 0xf3, 0xc0, 0x77, 0x24, 0x68, 0x3b,
	0x12, 0xac, 0xd5, 0x5e, 0x6a, 0x86, 0x3f, 0x7f, 0x7c, 0xbf, 0x3d, 0xea, 0xec, 0xf7, 0x0f, 0x9e,
	0x04, 0xbe, 0x87, 0xc1, 0x0d, 0xff, 0x46, 0xb6, 0x1b, 0xee, 0xac, 0xc1, 0x92, 0x5a, 0xb2, 0xc9,
	0x57, 0xf4, 0xc0, 0x89, 0x94, 0x3f, 0xba, 0xa1, 0xea, 0xd7, 0x46, 0x2a, 0x57, 0xc2, 0xfa, 0x83,
	0x93, 0x7d, 0x41, 0x03, 0x27, 0x13, 0x6e, 0x6c, 0x54, 0x37, 0x73, 0x7b, 0x7a, 0xcd, 0xf5, 0x56,
	0x30, 0x59, 0xb4, 0xa6, 0xdf, 0xde, 0x74, 0xff, 0x00, 0xb7, 0xa6, 0xab, 0x99, 0x93, 0x7e, 0x43,
	0xbb, 0x7a, 0x9f, 0x7c, 0x42, 0x5b, 0x8e, 0xbf, 0x1e, 0x2a, 0x7e, 0x76, 0x43, 0x1d, 0x76, 0x05,
	0xff, 0xe0, 0x7f, 0x5a, 0xf8, 0x6e, 0x0b, 0xff, 0x7f, 0x3d, 0x08, 0x6a, 0x60, 0x1f, 0xdd, 0x46,
	0x1c, 0xbe, 0xfa, 0xfc, 0x92, 0x0b, 0xbb, 0xaa, 0x97, 0x41, 0x0e, 0x2a, 0x84, 0x92, 0xe9, 0x1c,
	0xaa, 0x22, 0xf4, 0xd7, 0xfc, 0x92, 0x9a, 0x90, 0x43, 0x98, 0x83, 0x52, 0xa0, 0x97, 0x3d, 0x97,
	0xbc, 0xf9, 0x1b, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x28, 0x73, 0x06, 0xe2, 0x02, 0x00, 0x00,
}
